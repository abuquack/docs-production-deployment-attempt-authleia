# Production Docker Compose override: all services, no host volume mounts, secrets via env vars or Docker secrets where needed
version: '3.8'

services:
  postgresql:
    image: postgres:16
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 1s
      timeout: 2s
      retries: 300

  redis:
    image: redis:5
    restart: unless-stopped

  mailcatcher:
    image: sj26/mailcatcher:latest
    restart: unless-stopped

  minio:
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: minio server --console-address :9001 /data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 1s
      timeout: 20s
      retries: 300

  createbuckets:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
        restart: true
    entrypoint: >
      sh -c "
      /usr/bin/mc alias set impress http://minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD && \
      /usr/bin/mc mb impress/impress-media-storage && \
      /usr/bin/mc version enable impress/impress-media-storage && \
      exit 0;"

  app:
    image: impress:backend-production
    restart: unless-stopped
    environment:
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE}
      DJANGO_CONFIGURATION: ${DJANGO_CONFIGURATION}
      REDIS_URL: ${REDIS_URL}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      AUTHELIA_JWT_SECRET: ${AUTHELIA_JWT_SECRET}
      AUTHELIA_SESSION_SECRET: ${AUTHELIA_SESSION_SECRET}
      VIRTUAL_HOST: auth.abuhussam.uk,storage.abuhussam.uk
      LETSENCRYPT_HOST: auth.abuhussam.uk,storage.abuhussam.uk
      LETSENCRYPT_EMAIL: admin@abuhussam.uk
    depends_on:
      postgresql:
        condition: service_healthy
        restart: true
      redis:
        condition: service_started
      minio:
        condition: service_started
      mailcatcher:
        condition: service_started
      createbuckets:
        condition: service_started
    expose:
      - "8000"
    networks:
      - default

  celery:
    image: impress:backend-production
    command: ["celery", "-A", "impress.celery_app", "worker", "-l", "INFO"]
    restart: unless-stopped
    environment:
      DJANGO_CONFIGURATION: ${DJANGO_CONFIGURATION}
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE}
      REDIS_URL: ${REDIS_URL}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      AUTHELIA_JWT_SECRET: ${AUTHELIA_JWT_SECRET}
      AUTHELIA_SESSION_SECRET: ${AUTHELIA_SESSION_SECRET}
    depends_on:
      - app

  frontend:
    image: impress:frontend-production
    restart: unless-stopped
    environment:
      NODE_ENV: production
      VIRTUAL_HOST: docs.abuhussam.uk
      LETSENCRYPT_HOST: docs.abuhussam.uk
      LETSENCRYPT_EMAIL: admin@abuhussam.uk
    expose:
      - "3000"
    networks:
      - default

  y-provider:
    image: impress:y-provider-production
    restart: unless-stopped
    environment:
      NODE_ENV: production
    ports:
      - "4444:4444"

  authelia:
    image: impress:authelia-production
    restart: unless-stopped
    environment:
      AUTHELIA_IDENTITY_VALIDATION_RESET_PASSWORD_JWT_SECRET: ${AUTHELIA_JWT_SECRET}
      AUTHELIA_SESSION_SECRET: ${AUTHELIA_SESSION_SECRET}
      AUTHELIA_STORAGE_ENCRYPTION_KEY: ${AUTHELIA_STORAGE_ENCRYPTION_KEY}
      AUTHELIA_PUBLIC_URL: ${AUTHELIA_PUBLIC_URL}

  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx_certs:/etc/nginx/certs:rw
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
    environment:
      - ENABLE_IPV6=true
    networks:
      - default

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-letsencrypt
    restart: unless-stopped
    depends_on:
      - nginx-proxy
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - DEFAULT_EMAIL=admin@abuhussam.uk
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - nginx_certs:/etc/nginx/certs:rw
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
    networks:
      - default

volumes:
  nginx_certs:
  nginx_vhost:
  nginx_html:

networks:
  default:
    driver: bridge
